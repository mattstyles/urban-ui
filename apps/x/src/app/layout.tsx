// note that this is poop because layouts should NOT be client

// import * as stylex from '@stylexjs/stylex'
// import {Inter} from 'next/font/google'
// import {inter} from '~/app/font.ts'
import cx from 'clsx'
import type { Metadata } from 'next'

import { ModalContainer } from './modals'

import './globals.css'

// use client nukes this, this is not a good solution, we should use a context probably to control a "global" modal container element
export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
}

function RootLayout({ children }: { children: React.ReactNode }) {
  return (
    // <html lang="en" {...stylex.props(styles.root)}>
    <html lang="en">
      {/* <body className={cx(inter.className, inter.variable)}>{children}</body> */}
      <body>
        {children}
        <ModalContainer />
      </body>
    </html>
  )
}

// const styles = stylex.create({
// 	root: {
// 		minHeight: "100vh",
// 	},
// });

export default RootLayout
